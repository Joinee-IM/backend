# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Build and Deploy to GKE

on:
  push:
    branches: [ "master", "develop" ]

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.CLUSTER_NAME }}    # Add your cluster name here.
  GKE_REGION: ${{ secrets.CLUSTER_ZONE }}   # Add your cluster zone here.
  ENV: ${{ secrets.ENV }}
  GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}
        install_components: 'gke-gcloud-auth-plugin'
        export_default_credentials: true

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_REGION }}
        project_id: ${{ env.PROJECT_ID }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Setup GAR Config
      run: |-
        gcloud auth configure-docker asia-east1-docker.pkg.dev

    # Build, push, and cache the Docker image
    - name: Build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: asia-east1-docker.pkg.dev/tw-rd-sa-zoe-lin/cloud-native-repository/cloud-native-backend:${{ github.run_id }}
        cache-from: type=gha
        cache-to: type=gha, mode=max

    - name: Release
      run: |-
        echo "$ENV" > deploy/helm/charts/.env
        echo "$GCP_SERVICE_ACCOUNT" > deploy/helm/charts/gcp-service-account.json
        helm upgrade cloud-native-backend deploy/helm/charts \
        --install \
        --namespace=prod  \
        --values deploy/helm/production/values.yaml \
        --set image.tag=${{ github.run_id }} \
        --set envFile=.env \
        --set gcpServiceAccount=gcp-service-account.json
